sonarqube {
    properties {
        property "sonar.projectName", "made-sonar-qube-test-android" //nome que será exibido no dashboard do SonarQube
        property "sonar.projectKey", "made-sonar-qube-test-android" //chave/id único do projeto no dashboard do SonarQube
        property "sonar.host.url", "http://127.0.0.1:9000/" //endereço do seu server do SonarQube
        property "sonar.language", "kotlin" //não percebi nenhuma diferença ao trocar para kotlin

        property "sonar.sources", "src/main/" //quais são os arquivos .java e .kt daonde o SonarQube vai tirar as métricas
        //property "sonar.sources", "app/src/main/, splash/src/main" //caso vc tenha mais de um caminho (de outros módulos) para analisar
        property "sonar.java.binaries", "build/tmp/kotlin-classes" //no caso do kotlin, é o caminho da onde o binários das classes javes são extraídos. Não sei pra q server ainda
        property "sonar.tests", "src/test" //O caminho para os testes unitários. Mas não sei pra q server ainda já que os relatórios de cobertura são extraídos do jacoco

        //Configuração da parte do Jacoco. Não precisa ter essas linhas caso o teste de coverage não for necessário
        property "sonar.jacoco.reportPaths", "build/jacoco/testDebugUnitTest.exec, app/build/outputs/code_coverage/debugAndroidTest/connected/*.ec"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacocoCombined/debug/jacoco.xml"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "build/jacoco/testDebugUnitTest.exec"
        property "sonar.android.lint.report", "build/reports/lint-results.xml"
    }
}